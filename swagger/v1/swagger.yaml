---
openapi: 3.0.1
info:
  title: Tinymce demo API V1
  version: v1
paths:
  "/api/v1/posts":
    get:
      summary: Return list of posts
      tags:
      - Posts
      description: Return a list of posts
      responses:
        '200':
          description: List of posts
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/post"
    post:
      summary: Create a post
      tags:
      - Posts
      description: Create a post
      parameters: []
      responses:
        '201':
          description: Post created
          content:
            application/json:
              example:
                message: Post created
                post_id: 1
                success: true
        '422':
          description: invalid request
          content:
            application/json:
              example:
                message: Error
                success: false
        '400':
          description: Bad request
          content:
            application/json:
              example:
                message: Error
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_post"
  "/api/v1/posts/{id}":
    get:
      summary: Return a post
      tags:
      - Posts
      description: Return a single post
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: post found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/post"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
    put:
      summary: update a post
      tags:
      - Posts
      description: Update a single post
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: post updated
          content:
            application/json:
              example:
                message: Post updated
                success: true
        '404':
          description: Not found
          content:
            application/json:
              example:
                message: Not found
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/new_post"
    delete:
      summary: Delete a post
      tags:
      - Posts
      description: Delete a single post
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: post deleted
          content:
            application/json:
              example:
                message: Post deleted
                success: true
        '404':
          description: Not found
          content:
            application/json:
              example:
                message: Not found
  "/api/v1/posts/{id}/edit":
    get:
      summary: Return a post
      tags:
      - Posts
      description: Return a single post
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: post found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/edit_post"
        '404':
          description: Not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/not_found"
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  schemas:
    post:
      type: object
      properties:
        id:
          type: integer
          example: '1'
        title:
          type: string
          example: Post title 1
        extract:
          type: string
          example: Lorem ipsum dolor sit amet 2
          nullable: true
        content:
          type: string
          example: "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur
            faucibus dui nec</p>"
          nullable: true
        created_at:
          type: string
          example: July 28, 2021 19:23
      required:
      - id
      - title
    new_post:
      type: object
      properties:
        title:
          type: string
          example: Post title 1
        extract:
          type: string
          example: Lorem ipsum dolor sit amet 2
          nullable: true
        content:
          type: string
          example: "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur
            faucibus dui nec</p>"
          nullable: true
      required:
      - title
    edit_post:
      type: object
      properties:
        id:
          type: integer
          example: '2'
        title:
          type: string
          example: Post title 1
        extract:
          type: string
          example: Lorem ipsum dolor sit amet 2
          nullable: true
        content:
          type: string
          example: "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur
            faucibus dui nec</p>"
          nullable: true
        breadcrumbs:
          type: array
          example:
          - - to: "/"
              text: Inicio
              is_active: false
            - to: "/2"
              text: Lorem ipsum dolor sit amet 2
              is_active: false
            - to: ''
              text: Editar
              is_active: true
      required:
      - title
    not_found:
      type: object
      properties:
        message:
          type: string
          example: Not found
